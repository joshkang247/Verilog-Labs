// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/29/2016 22:06:34"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          part1
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module part1_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [0:0] KEY;
reg [1:0] SW;
// wires                                               
wire [9:0] LEDR;
wire clk;
wire r;
wire w;
wire w0;
wire w1;
wire w2;
wire w3;
wire w4;
wire w5;
wire w6;
wire w7;
wire w8;
wire z;

// assign statements (if any)                          
part1 i1 (
// port map - connection between master ports and signals/registers   
	.KEY(KEY),
	.LEDR(LEDR),
	.SW(SW),
	.clk(clk),
	.r(r),
	.w(w),
	.w0(w0),
	.w1(w1),
	.w2(w2),
	.w3(w3),
	.w4(w4),
	.w5(w5),
	.w6(w6),
	.w7(w7),
	.w8(w8),
	.z(z)
);
initial 
begin 
#1000000 $stop;
end 

// KEY
initial
begin
	KEY = 1'b0;
end 

// KEY[0]
initial
begin
	repeat(16)
	begin
		KEY[0] = 1'b0;
		KEY[0] = #30000 1'b1;
		# 30000;
	end
	KEY[0] = 1'b0;
	KEY[0] = #30000 1'b1;
end 

// SW[1]
initial
begin
	SW[1] = 1'b1;
end 

// SW[0]
initial
begin
	SW[0] = 1'b0;
end 
endmodule

